package com.sutherland.library.service;

import org.springframework.security.core.GrantedAuthority;

import org.springframework.security.core.authority.AuthorityUtils;

import java.util.Collection;

public class UserDetails implements UserDetails {

    private String username;
    private String password;
    private String role;

    public UserDetails(String username, String password, String role) {
        this.username = username;
        this.password = password;
        this.role = role;
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        // This will create authorities (roles) for Spring Security to use
        return AuthorityUtils.createAuthorityList("ROLE_" + role);
    }

    @Override
    public String getPassword() {
        return password; // Return the password from the User entity
    }

    @Override
    public String getUsername() {
        return username; // Return the username from the User entity
    }

    @Override
    public boolean isAccountNonExpired() {
        return true; // For simplicity, let's assume account is not expired
    }

    @Override
    public boolean isAccountNonLocked() {
        return true; // For simplicity, let's assume account is not locked
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true; // For simplicity, let's assume credentials are not expired
    }

    @Override
    public boolean isEnabled() {
        return true; // For simplicity, let's assume account is enabled
    }
}
